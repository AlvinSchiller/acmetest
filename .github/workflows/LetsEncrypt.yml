name: LetsEncrypt
on:
  push:
    branches:
      - '*'
    paths:
      - '**.sh'
      - '**.yml'
      - 'plat.conf'
  pull_request:
    branches:
      - '*'
    paths:
      - '**.sh'
      - '**.yml'
      - 'plat.conf'


jobs:
  Docker:
    runs-on: ubuntu-latest
    env:
      DEBUG: 1
      TEST_PREFERRED_CHAIN: (STAGING) Pretend Pear X1
      TEST_ACME_Server: "LetsEncrypt.org_test"
    steps:
    - uses: actions/checkout@v2
    - name: Run acmetest
      run: ./rundocker.sh  testall

  MacOS:
    runs-on: macos-latest
    env:
      TEST_PREFERRED_CHAIN: (STAGING) Pretend Pear X1
      TEST_ACME_Server: "LetsEncrypt.org_test"
    steps:
    - uses: actions/checkout@v2
    - name: Install tools
      run:  brew update && brew install socat;
    - name: Run acmetest
      run: sudo --preserve-env ./letest.sh

  Windows:
    runs-on: windows-latest
    env:
      #The 80 port is used by Windows server, we have to use a custom port, ngrok will also use this port.
      Le_HTTPPort: 8888
      TEST_PREFERRED_CHAIN: (STAGING) Pretend Pear X1
      TEST_ACME_Server: "LetsEncrypt.org_test"
    steps:
    - name: Set git to use LF
      run: |
          git config --global core.autocrlf false
    - uses: actions/checkout@v2
    - name: Install cygwin base packages with chocolatey
      run: |
          choco config get cacheLocation
          choco install --no-progress cygwin
      shell: cmd
    - name: Install cygwin additional packages
      run: |
          C:\tools\cygwin\cygwinsetup.exe -qgnNdO -R C:/tools/cygwin -s http://mirrors.kernel.org/sourceware/cygwin/ -P socat,curl,cron,unzip,git
      shell: cmd
    - name: Set ENV
      shell: cmd
      run: |
          echo PATH=C:\tools\cygwin\bin;C:\tools\cygwin\usr\bin >> %GITHUB_ENV%
    - name: Check ENV
      shell: cmd
      run: |
          echo "PATH=%PATH%"
    - name: Run acmetest
      shell: cmd
      run: bash.exe -c ./letest.sh


  FreeBSD:
    runs-on: macos-10.15
    env:
      TEST_PREFERRED_CHAIN: (STAGING) Pretend Pear X1
      TEST_ACME_Server: "LetsEncrypt.org_test"
    steps:
    - uses: actions/checkout@v2
    - uses: vmactions/cf-tunnel@v0.0.3
      id: tunnel
      with:
        protocol: http
        port: 8080
    - name: Set envs
      run: echo "TestingDomain=${{steps.tunnel.outputs.server}}" >> $GITHUB_ENV
    - uses: vmactions/freebsd-vm@v0.1.4
      with:
        envs: 'TestingDomain TEST_PREFERRED_CHAIN TEST_ACME_Server'
        nat: |
          "8080": "80"
        prepare: pkg install -y socat curl
        usesh: true
        run: ./letest.sh

  Solaris:
    runs-on: macos-10.15
    env:
      TEST_PREFERRED_CHAIN: (STAGING) Pretend Pear X1
      TEST_ACME_Server: "LetsEncrypt.org_test"
    steps:
    - uses: actions/checkout@v2
    - uses: vmactions/cf-tunnel@v0.0.3
      id: tunnel
      with:
        protocol: http
        port: 8080
    - name: Set envs
      run: echo "TestingDomain=${{steps.tunnel.outputs.server}}" >> $GITHUB_ENV
    - uses: vmactions/solaris-vm@v0.0.3
      with:
        envs: 'TestingDomain TEST_PREFERRED_CHAIN TEST_ACME_Server'
        nat: |
          "8080": "80"
        prepare: pkgutil -y -i socat curl
        run: ./letest.sh

